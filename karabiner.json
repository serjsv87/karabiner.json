{
    "title": "Sikach Rules",
    "rules": [
      {
        "description": "Ctrl+C, Ctrl+V, Ctrl+X => Cmd+C (Copy), Cmd+V (Paste), Cmd+X (Cut), Cmd+W (Close)",
        "manipulators": [
          {
            "type": "basic",
            "from": {
              "key_code": "c",
              "modifiers": {
                "mandatory": [
                  "control"
                ],
                "optional": [
                  "any"
                ]
              }
            },
            "to": [
              {
                "key_code": "c",
                "modifiers": [
                  "left_command"
                ]
              },
              {
                "key_code": "c",
                "modifiers": [
                  "control",
                  "any"
                ],
                "lazy": true
              }
            ],
            "conditions": [
              {
                "type": "frontmost_application_unless",
                "bundle_identifiers": [
                  "^com\\.microsoft\\.rdc$",
                  "^com\\.microsoft\\.rdc\\.mac$",
                  "^com\\.microsoft\\.rdc\\.macos$",
                  "^com\\.microsoft\\.rdc\\.osx\\.beta$",
                  "^net\\.sf\\.cord$",
                  "^com\\.thinomenon\\.RemoteDesktopConnection$",
                  "^com\\.itap-mobile\\.qmote$",
                  "^com\\.nulana\\.remotixmac$",
                  "^com\\.p5sys\\.jump\\.mac\\.viewer$",
                  "^com\\.p5sys\\.jump\\.mac\\.viewer\\.web$",
                  "^com\\.teamviewer\\.TeamViewer$",
                  "^com\\.vmware\\.horizon$",
                  "^com\\.2X\\.Client\\.Mac$",
                  "^com\\.vmware\\.fusion$",
                  "^com\\.vmware\\.horizon$",
                  "^com\\.vmware\\.view$",
                  "^com\\.parallels\\.desktop$",
                  "^com\\.parallels\\.vm$",
                  "^com\\.parallels\\.desktop\\.console$",
                  "^org\\.virtualbox\\.app\\.VirtualBoxVM$",
                  "^com\\.citrix\\.XenAppViewer$",
                  "^com\\.vmware\\.proxyApp\\.",
                  "^com\\.parallels\\.winapp\\.",
                  "^org\\.macports\\.X11$",
                  "^com\\.apple\\.Terminal$",
                  "^com\\.googlecode\\.iterm2$",
                  "^co\\.zeit\\.hyperterm$",
                  "^co\\.zeit\\.hyper$",
                  "^io\\.alacritty$",
                  "^net\\.kovidgoyal\\.kitty$",
                  "^tv\\.parsec\\.www$"
                ]
              }
            ]
          },
          {
            "type": "basic",
            "from": {
              "key_code": "v",
              "modifiers": {
                "mandatory": [
                  "control"
                ],
                "optional": [
                  "any"
                ]
              }
            },
            "to": [
              {
                "key_code": "v",
                "modifiers": [
                  "left_command"
                ]
              },
              {
                "key_code": "v",
                "modifiers": [
                  "control",
                  "any"
                ],
                "lazy": true
              }
            ],
            "conditions": [
              {
                "type": "frontmost_application_unless",
                "bundle_identifiers": [
                  "^com\\.microsoft\\.rdc$",
                  "^com\\.microsoft\\.rdc\\.mac$",
                  "^com\\.microsoft\\.rdc\\.macos$",
                  "^com\\.microsoft\\.rdc\\.osx\\.beta$",
                  "^net\\.sf\\.cord$",
                  "^com\\.thinomenon\\.RemoteDesktopConnection$",
                  "^com\\.itap-mobile\\.qmote$",
                  "^com\\.nulana\\.remotixmac$",
                  "^com\\.p5sys\\.jump\\.mac\\.viewer$",
                  "^com\\.p5sys\\.jump\\.mac\\.viewer\\.web$",
                  "^com\\.teamviewer\\.TeamViewer$",
                  "^com\\.vmware\\.horizon$",
                  "^com\\.2X\\.Client\\.Mac$",
                  "^com\\.vmware\\.fusion$",
                  "^com\\.vmware\\.horizon$",
                  "^com\\.vmware\\.view$",
                  "^com\\.parallels\\.desktop$",
                  "^com\\.parallels\\.vm$",
                  "^com\\.parallels\\.desktop\\.console$",
                  "^org\\.virtualbox\\.app\\.VirtualBoxVM$",
                  "^com\\.citrix\\.XenAppViewer$",
                  "^com\\.vmware\\.proxyApp\\.",
                  "^com\\.parallels\\.winapp\\.",
                  "^org\\.macports\\.X11$",
                  "^com\\.apple\\.Terminal$",
                  "^com\\.googlecode\\.iterm2$",
                  "^co\\.zeit\\.hyperterm$",
                  "^co\\.zeit\\.hyper$",
                  "^io\\.alacritty$",
                  "^net\\.kovidgoyal\\.kitty$",
                  "^tv\\.parsec\\.www$"
                ]
              }
            ]
          },
          {
            "type": "basic",
            "from": {
              "key_code": "x",
              "modifiers": {
                "mandatory": [
                  "control"
                ],
                "optional": [
                  "any"
                ]
              }
            },
            "to": [
              {
                "key_code": "x",
                "modifiers": [
                  "left_command"
                ]
              },
              {
                "key_code": "x",
                "modifiers": [
                  "control",
                  "any"
                ],
                "lazy": true
              }
            ],
            "conditions": [
              {
                "type": "frontmost_application_unless",
                "bundle_identifiers": [
                  "^com\\.microsoft\\.rdc$",
                  "^com\\.microsoft\\.rdc\\.mac$",
                  "^com\\.microsoft\\.rdc\\.macos$",
                  "^com\\.microsoft\\.rdc\\.osx\\.beta$",
                  "^net\\.sf\\.cord$",
                  "^com\\.thinomenon\\.RemoteDesktopConnection$",
                  "^com\\.itap-mobile\\.qmote$",
                  "^com\\.nulana\\.remotixmac$",
                  "^com\\.p5sys\\.jump\\.mac\\.viewer$",
                  "^com\\.p5sys\\.jump\\.mac\\.viewer\\.web$",
                  "^com\\.teamviewer\\.TeamViewer$",
                  "^com\\.vmware\\.horizon$",
                  "^com\\.2X\\.Client\\.Mac$",
                  "^com\\.vmware\\.fusion$",
                  "^com\\.vmware\\.horizon$",
                  "^com\\.vmware\\.view$",
                  "^com\\.parallels\\.desktop$",
                  "^com\\.parallels\\.vm$",
                  "^com\\.parallels\\.desktop\\.console$",
                  "^org\\.virtualbox\\.app\\.VirtualBoxVM$",
                  "^com\\.citrix\\.XenAppViewer$",
                  "^com\\.vmware\\.proxyApp\\.",
                  "^com\\.parallels\\.winapp\\.",
                  "^org\\.macports\\.X11$",
                  "^com\\.apple\\.Terminal$",
                  "^com\\.googlecode\\.iterm2$",
                  "^co\\.zeit\\.hyperterm$",
                  "^co\\.zeit\\.hyper$",
                  "^io\\.alacritty$",
                  "^net\\.kovidgoyal\\.kitty$",
                  "^tv\\.parsec\\.www$"
                ]
              }
            ]
          }
        ]
      },
      {
        "description": "Toggle microphone on cmd+shift+m",
        "manipulators": [
          {
            "from": {
              "key_code": "m",
              "modifiers": {
                "mandatory": [
                  "left_command",
                  "left_shift"
                ]
              }
            },
            "to": [
              {
                "shell_command": "osascript -e 'on getMicrophoneVolume()\n\tinput volume of (get volume settings)\nend getMicrophoneVolume\n\non disableMicrophone()\n\tset volume input volume 0\n    display notification \"Volume set to 0\" with title \"❌ Microphone is off\"\nend disableMicrophone\n\non enableMicrophone()\n\tset volume input volume 100\n    display notification \"Volume set to 100\" with title \"✅ Microphone is on\"\nend enableMicrophone\n\nif getMicrophoneVolume() is greater than 0 then\ndisableMicrophone()\nelse\nenableMicrophone()\nend if'"
              }
            ],
            "type": "basic"
          }
        ]
      },
      {
        "description": "Map Ctrl + Shift + 4 to Cmd + Shift + 4",
        "manipulators": [
          {
            "type": "basic",
            "from": {
              "key_code": "4",
              "modifiers": {
                "mandatory": [
                  "left_shift",
                  "left_control"
                ]
              }
            },
            "to": [
              {
                "key_code": "4",
                "modifiers": [
                  "left_shift",
                  "left_command"
                ]
              }
            ]
          }
        ]
      },
      {
        "description": "Map Ctrl + Shift + 3 to Cmd + Shift + 3",
        "manipulators": [
          {
            "type": "basic",
            "from": {
              "key_code": "3",
              "modifiers": {
                "mandatory": [
                  "left_shift",
                  "left_control"
                ]
              }
            },
            "to": [
              {
                "key_code": "3",
                "modifiers": [
                  "left_shift",
                  "left_command"
                ]
              }
            ]
          }
        ]
      },
      {
        "description": "Map Ctrl + Shift + 5 to Cmd + Shift + 5",
        "manipulators": [
          {
            "type": "basic",
            "from": {
              "key_code": "5",
              "modifiers": {
                "mandatory": [
                  "left_shift",
                  "left_control"
                ]
              }
            },
            "to": [
              {
                "key_code": "5",
                "modifiers": [
                  "left_shift",
                  "left_command"
                ]
              }
            ]
          }
        ]
      },
      {
        "description": "Cmd + Shift to Ctrl + Space (only if Cmd + Shift is pressed alone)",
        "manipulators": [
          {
            "from": {
              "key_code": "left_shift",
              "modifiers": {
                "mandatory": [
                  "left_command"
                ],
                "optional": [
                  "any"
                ]
              }
            },
            "to_if_alones": [
              {
                "key_code": "spacebar",
                "modifiers": [
                  "left_control"
                ]
              }
            ],
            "type": "basic"
          }
        ]
      },
      {
        "description": "Cmd + Shift + any to Cmd + Shift + any",
        "manipulators": [
          {
            "from": {
              "key_code": "left_shift",
              "modifiers": {
                "mandatory": [
                  "left_command",
                  "any"
                ]
              }
            },
            "to": [
              {
                "key_code": "left_shift",
                "modifiers": [
                  "left_command",
                  "any"
                ]
              }
            ],
            "type": "basic"
          }
        ]
      },      
      {
        "description": "Ctrl+W => Cmd+W (Close)",
        "manipulators": [
          {
            "conditions": [
              {
                "bundle_identifiers": [
                  "^com\\.microsoft\\.rdc$",
                  "^com\\.microsoft\\.rdc\\.mac$",
                  "^com\\.microsoft\\.rdc\\.macos$",
                  "^com\\.microsoft\\.rdc\\.osx\\.beta$",
                  "^net\\.sf\\.cord$",
                  "^com\\.thinomenon\\.RemoteDesktopConnection$",
                  "^com\\.itap-mobile\\.qmote$",
                  "^com\\.nulana\\.remotixmac$",
                  "^com\\.p5sys\\.jump\\.mac\\.viewer$",
                  "^com\\.p5sys\\.jump\\.mac\\.viewer\\.web$",
                  "^com\\.teamviewer\\.TeamViewer$",
                  "^com\\.vmware\\.horizon$",
                  "^com\\.2X\\.Client\\.Mac$",
                  "^com\\.vmware\\.fusion$",
                  "^com\\.vmware\\.horizon$",
                  "^com\\.vmware\\.view$",
                  "^com\\.parallels\\.desktop$",
                  "^com\\.parallels\\.vm$",
                  "^com\\.parallels\\.desktop\\.console$",
                  "^org\\.virtualbox\\.app\\.VirtualBoxVM$",
                  "^com\\.citrix\\.XenAppViewer$",
                  "^com\\.vmware\\.proxyApp\\.",
                  "^com\\.parallels\\.winapp\\.",
                  "^org\\.macports\\.X11$",
                  "^com\\.googlecode\\.iterm2$",
                  "^co\\.zeit\\.hyperterm$",
                  "^co\\.zeit\\.hyper$",
                  "^io\\.alacritty$",
                  "^net\\.kovidgoyal\\.kitty$",
                  "^tv\\.parsec\\.www$"
                ],
                "type": "frontmost_application_unless"
              }
            ],
            "from": {
              "key_code": "w",
              "modifiers": {
                "mandatory": [
                  "control"
                ],
                "optional": [
                  "any"
                ]
              }
            },
            "to": [
              {
                "key_code": "w",
                "modifiers": [
                  "left_command"
                ]
              }
            ],
            "type": "basic"
          }
        ]
      }
    ]
  }
